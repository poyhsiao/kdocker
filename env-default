### Global environment

#####################################
#
# PHP version
#
# available options can be
# 7.0, 7.1, 7.2, 7.3, 7.4, 8.0, 8.1
# NOT support PHP version under 7.0
#
#####################################

PHP_VERSION=8.1

#####################################
# Volumes
#####################################
LOCAL_PATH1=../web/pt1
LOCAL_PATH2=../web/pt2
LOCAL_PATH3=../web/pt3
APP_PATH=../web/app

POINTER1=/pt1
POINTER2=/pt2
POINTER3=/pt3
APP_POINTER=/usr/src/app

#####################################
# USERINFO
#####################################
PUID=1000
PGID=1000
LINUX_USER=kim


#####################################
# WORKSPACE
#####################################

WORKSPACE_SSH_PORT=22299
WORKSPACE_SSH_USER_PASSWORD=asdf1234
WORKSPACE_INSTALL_PHP=true
WORKSPACE_CANVAS_SUPPORT=true
WORKSPACE_INSTALL_LARAVEL_INSTALLER=true
WORKSPACE_INSTALL_DEPLOYER=false
WORKSPACE_INSTALL_LINUXBREW=true
WORKSPACE_INSTALL_MSSQL=false
WORKSPACE_INSTALL_MC=false
WORKSPACE_INSTALL_IMAGE_OPTIMIZERS=true
WORKSPACE_INSTALL_PYTHON=true
WORKSPACE_INSTALL_IMAGEMAGICK=true
WORKSPACE_INSTALL_PG_CLIENT=false
WORKSPACE_INSTALL_COMPOSER=true
WORKSPACE_INSTALL_PHP_CODE_QUALITY=true
# check http://chromedriver.chromium.org/ to get the latest version
WORKSPACE_CHROME_DRIVER_VERSION=77.0.3865.40
WORKSPACE_INSTALL_NODEJS=true
# On non-x86_64 machines, you may need to install nodejs from source.
WORKSPACE_NODEJS_VERSION=v18.6.0
WORKSPACE_NODEJS_VERSION_BACKUP=false
WORKSPACE_NODEJS_NVM_VERSION=v0.39.1
WORKSPACE_INSTALL_GOLANG=true
WORKSPACE_INSTALL_WORKSPACE_SSH=false
WORKSPACE_PHP_XDEBUG_PORT=9009

#--------------------
# system setting
#--------------------
WORKSPACE_RESTART=always
WORKSPACE_CPU_LIMIT=1
WORKSPACE_MEMORY_LIMIT=1g

#####################################
# SWOOLE
#####################################
SWOOLE_SSH_PORT=22222
# may reference swoole github for version tag or `master` (https://github.com/swoole/swoole-src)
SWOOLE_VERSION=v4.8.11
SWOOLE_CANVAS_SUPPORT=true
SWOOLE_INSTALL_LARAVEL_INSTALLER=false
SWOOLE_INSTALL_DEPLOYER=false
SWOOLE_INSTALL_LINUXBREW=false
SWOOLE_INSTALL_MSSQL=false
SWOOLE_INSTALL_MC=false
SWOOLE_INSTALL_IMAGE_OPTIMIZERS=true
SWOOLE_INSTALL_SYMFONY=false
SWOOLE_INSTALL_PYTHON=false
SWOOLE_INSTALL_PYTHON3=true
SWOOLE_INSTALL_IMAGEMAGICK=true
SWOOLE_INSTALL_PG_CLIENT=false
SWOOLE_INSTALL_PHP_CODE_QUALITY=false
SWOOLE_INSTALL_DRUSH=false
SWOOLE_INSTALL_DRUPAL_CONSOLE=false
# check http://chromedriver.chromium.org/ to get the latest version
SWOOLE_CHROME_DRIVER_VERSION=77.0.3865.40
SWOOLE_INSTALL_DUSK_DEPS=false
SWOOLE_INSTALL_LARAVEL_ENVOY=false
SWOOLE_INSTALL_NODEJS=true
SWOOLE_NODEJS_VERSION=12
SWOOLE_NODEJS_VERSION_BACKUP=10
SWOOLE_INSTALL_YARN=false
SWOOLE_NODEJS_YARN_VERSION=latest
SWOOLE_NODEJS_NVM_VERSION=v0.35.3
SWOOLE_INSTALL_WORKSPACE_SSH=false
SWOOLE_PHP_XDEBUG_PORT=9002

# php extensions
SWOOLE_INSTALL_MCRYPT=true
SWOOLE_INSTALL_PDO_MYSQL=true
SWOOLE_INSTALL_PDO_PGSQL=true
SWOOLE_INSTALL_PDO_SQLITE=true
SWOOLE_INSTALL_GD=true
SWOOLE_INSTALL_APC=true
SWOOLE_INSTALL_FTP=true
SWOOLE_INSTALL_XSL=true
SWOOLE_INSTALL_CALENDAR=true
SWOOLE_INSTALL_CTYPE=true
SWOOLE_INSTALL_DBA=true
SWOOLE_INSTALL_DOM=true
SWOOLE_INSTALL_JSON=true
SWOOLE_INSTALL_HASH=true
SWOOLE_INSTALL_SOCKETS=true
SWOOLE_INSTALL_PDO=true
SWOOLE_INSTALL_MBSTRING=true
SWOOLE_INSTALL_IMAP=true
SWOOLE_INSTALL_CURL=true
SWOOLE_INSTALL_FILEINFO=true
SWOOLE_INSTALL_GETTEXT=true
SWOOLE_INSTALL_ICONV=true
SWOOLE_INSTALL_PHAR=true
SWOOLE_INSTALL_POSIX=true
SWOOLE_INSTALL_PSPELL=true
SWOOLE_INSTALL_READLINE=true
SWOOLE_INSTALL_RECODE=true
SWOOLE_INSTALL_SHMOP=true
SWOOLE_INSTALL_SIMPLEXML=true
SWOOLE_INSTALL_SNMP=false
SWOOLE_INSTALL_SYSVMSG=true
SWOOLE_INSTALL_SYSVSEM=true
SWOOLE_INSTALL_SYSVSHM=true
SWOOLE_INSTALL_BZ2=true
SWOOLE_INSTALL_ENCHANT=true
SWOOLE_INSTALL_YAML=true
SWOOLE_INSTALL_EVENT=true
SWOOLE_INSTALL_TIDY=true
SWOOLE_INSTALL_WDDX=true
SWOOLE_INSTALL_XML=true
SWOOLE_INSTALL_XMLRPC=true
SWOOLE_INSTALL_XMLWRITER=true
SWOOLE_INSTALL_SOAP=true
SWOOLE_INSTALL_PGSQL=true
SWOOLE_INSTALL_BLACKFIRE=false
SWOOLE_INSTALL_PHPREDIS=true
SWOOLE_INSTALL_MONGO=true
SWOOLE_INSTALL_AMQP=true
SWOOLE_INSTALL_ZIP_ARCHIVE=true
SWOOLE_INSTALL_BCMATH=true
SWOOLE_INSTALL_GMP=true
SWOOLE_INSTALL_MEMCACHED=true
SWOOLE_INSTALL_EXIF=true
SWOOLE_INSTALL_AEROSPIKE=false
SWOOLE_INSTALL_OPCACHE=true
SWOOLE_INSTALL_MYSQLI=true
SWOOLE_INSTALL_TOKENIZER=true
SWOOLE_INSTALL_INTL=true
SWOOLE_INSTALL_PCNTL=true
SWOOLE_INSTALL_V8JS=false
SWOOLE_INSTALL_GHOSTSCRIPT=true
SWOOLE_INSTALL_LDAP=false
SWOOLE_INSTALL_SUHOSIN=true
SWOOLE_INSTALL_INOTIFY=true
SWOOLE_INSTALL_OEPNCC=true
SWOOLE_INSTALL_GRPC=true
SWOOLE_INSTALL_PROTOBUF=true
SWOOLE_INSTALL_MSSQL=false
SWOOLE_INSTALL_IMAGE_OPTIMIZERS=true
SWOOLE_INSTALL_IMAGEMAGICK=true
SWOOLE_CUSTOM_PORT=9501
SWOOLE_CUSTOM_EXT_PORT=9500
SWOOLE_WEBSOCKET_PORT=9502
SWOOLE_WEBSOCKET_EXT_PORT=9600
# entrypoint setting, default hyperf
SWOOLE_ENTRYPOINT_FILE=hyperf

#--------------------
# system setting
#--------------------
SWOOLE_RESTART=always

#####################################
# PHP-FPM:
#####################################

PHP_FPM_INSTALL_MCRYPT=true
PHP_FPM_INSTALL_PDO_MYSQL=true
PHP_FPM_INSTALL_PDO_PGSQL=true
PHP_FPM_INSTALL_PDO_SQLITE=true
PHP_FPM_INSTALL_GD=true
PHP_FPM_INSTALL_APC=true
PHP_FPM_INSTALL_FTP=true
PHP_FPM_INSTALL_XSL=true
PHP_FPM_INSTALL_CALENDAR=true
PHP_FPM_INSTALL_CTYPE=true
PHP_FPM_INSTALL_DBA=true
PHP_FPM_INSTALL_SOCKETS=true
PHP_FPM_INSTALL_PDO=true
PHP_FPM_INSTALL_MBSTRING=true
PHP_FPM_INSTALL_IMAP=true
PHP_FPM_INSTALL_GETTEXT=true
PHP_FPM_INSTALL_PSPELL=true
PHP_FPM_INSTALL_RECODE=true
PHP_FPM_INSTALL_SHMOP=true
PHP_FPM_INSTALL_SNMP=true
PHP_FPM_INSTALL_SYSVMSG=true
PHP_FPM_INSTALL_SYSVSEM=true
PHP_FPM_INSTALL_SYSVSHM=true
PHP_FPM_INSTALL_ENCHANT=true
PHP_FPM_INSTALL_YAML=true
PHP_FPM_INSTALL_EVENT=true
PHP_FPM_INSTALL_TIDY=true
PHP_FPM_INSTALL_XML=true
PHP_FPM_INSTALL_SOAP=true
PHP_FPM_INSTALL_PGSQL=true
PHP_FPM_INSTALL_XDEBUG=false
PHP_FPM_INSTALL_BLACKFIRE=false
PHP_FPM_INSTALL_PHPREDIS=true
PHP_FPM_INSTALL_MONGO=true
PHP_FPM_INSTALL_AMQP=true
PHP_FPM_INSTALL_ZIP_ARCHIVE=true
PHP_FPM_INSTALL_BCMATH=true
PHP_FPM_INSTALL_GMP=true
PHP_FPM_INSTALL_MEMCACHED=true
PHP_FPM_INSTALL_EXIF=true
PHP_FPM_INSTALL_OPCACHE=true
PHP_FPM_INSTALL_MYSQLI=true
PHP_FPM_INSTALL_TOKENIZER=true
PHP_FPM_INSTALL_PCNTL=true
PHP_FPM_INSTALL_INTL=true
PHP_FPM_INSTALL_WDDX=true
PHP_FPM_INSTALL_XMLRPC=true
PHP_FPM_INSTALL_GHOSTSCRIPT=true
PHP_FPM_INSTALL_LDAP=true
PHP_FPM_INSTALL_INOTIFY=true
PHP_FPM_INSTALL_OEPNCC=true
PHP_FPM_INSTALL_GRPC=false
PHP_FPM_INSTALL_MSSQL=false
PHP_FPM_INSTALL_IMAGE_OPTIMIZERS=true
PHP_FPM_INSTALL_IMAGEMAGICK=true
# Either install swoole or OpenSwoole, not both
PHP_FPM_INSTALL_SWOOLE=false
PHP_FPM_INSTALL_OPENSWOOLE=false
#
PHP_FPM_INSTALL_ZMQ=true
PHP_FPM_INSTALL_GREARMAN=true
PHP_FPM_INSTALL_DECIMAL=true
PHP_FPM_INSTALL_TRADER=true
PHP_FPM_PHP_XDEBUG_PORT=9001

#--------------------
# system setting
#--------------------
PHP_FPM_RESTART=always

#####################################
# PYTHON3:
#####################################
PYTHON3_VERSION=3.8
PYTHON3_LOG_DIR=/var/log/python3
PYTHON3_EXPOSE=8003
PYTHON3_PORT=8000

#--------------------
# system setting
#--------------------
PYTHON3_RESTART=on-failure


#####################################
# Caddy
#####################################

CADDY_PLUGINS=http.awslambda,http.cache,http.cors,http.expires,http.forwardproxy,http.ipfilter,http.locale,http.login,http.mailout,http.minify,http.nobots,http.proxyprotocol,http.ratelimit,http.realip,http.reauth,http.upload,net
CADDY_LICENSE=personal
CADDY_CUSTOM_CADDYFILE=./Caddyfile

#--------------------
# system setting
#--------------------
CADDY_RESTART=always

#####################################
# Nginx
#####################################

NGINX_VERSION=1.23
# available: 1.13(latest), 1.12, plz check https://hub.docker.com/_/nginx/ for detail information

NGINX_SITES_PATH=./nginx/sites-enabled
NGINX_PHP_UPSTREAM_CONTAINER=workspace
NGINX_PHP_UPSTREAM_PORT=9000

#--------------------
# system setting
#--------------------
NGINX_RESTART=always

#####################################
# Nginx Advanced
#####################################

NGINX_ADV_SITES_PATH=./nginx-adv/sites-enabled

NGINX_ADV_ALPINE_VERSION=latest
# available: 3.9, 3.10, 3.11, 3.12, edge, please check https://hub.docker.com/_/ for detail information.

NGINX_ADV_VERSION=1.19.2
# available: 1.13 and above, please check https://github.com/nginx/nginx for available versions

NGINX_ADV_DEV_KIT_VERSION=0.3.1
# available: 0.3.0, 0.3.1, please check https://github.com/vision5/ngx_devel_kit for available versions

NGINX_ADV_RTMP_VERSION=1.2.1
# available: 1.2.1, please check https://github.com/arut/nginx-rtmp-module for available versions

NGINX_ADV_LUA_VERSION=0.10.17
# available: 0.10.13, 0.10.17, please check https://github.com/openresty/lua-nginx-module for available versions

NGINX_ADV_STREAM_LUA_VERSION=0.0.8
# available: 0.0.8, please check https://github.com/openresty/stream-lua-nginx-module for available versions

NGINX_ADV_LUAJIT_VERSION=2.0.5
# available: 2.0.5, please check http://luajit.org/download.html for available versions

NGINX_ADV_LUA_RESTY_VERSION=0.1.19
# availalbe: 0.1.16, please check https://github.com/openresty/lua-resty-core for available versions

NGINX_ADV_LUA_RESTY_LRUCACHE_VERSION=0.10
# available: 0.10, please check https://github.com/openresty/lua-resty-lrucache for available versions

NGINX_ADV_FFMPEG_VERSION=4.3.1
# available: 4.3, 4.3.1, please check http://ffmpeg.org/releases/ for available versions

NGINX_ADV_LUAROCKS_VERSION=3.3.1
# available: 3.0.0, 3.3.1, please check https://github.com/luarocks/luarocks for available versions

NGINX_ADV_OPENRESTY_VERSION=1.17.8.2
# available: 1.13.6.1, 1.17.8.2, please check http://openresty.org/download/ for available versions

NGINX_ADV_HEADERS_MORE_MODULE_VERSION=0.33
# available: 0.33, please check https://github.com/openresty/headers-more-nginx-module for available versions

NGINX_ADV_VOD_MODULE_VERSION=1.27
# available: 1.27, please check https://github.com/kaltura/nginx-vod-module for available versions

NGINX_ADV_UPLOAD_PROGRESS_MODULE_VERSION=0.9.2
# available: 0.9.2, 0.9.1, please check https://github.com/masterzen/nginx-upload-progress-module for available versions

NGINX_ADV_RTMP_PORT=1935

#--------------------
# system setting
#--------------------
NGINX_ADV_RESTART=always

#####################################
#
# MySQL family:
#
# Mariadb
#
#####################################

MARIADB_VERSION=10.3
# available: 10.3, 10.2(latest), 10.1, 10.0, 5.5. may reference mariadb docker hub versions

MARIADB_DATABASE=default
MARIADB_USER=default
MARIADB_PASSWORD=secret
MARIADB_PORT=3306
MARIADB_ROOT_PASSWORD=root
MARIADB_ENTRYPOINT_INITDB=./mariadb/docker-entrypoint-initdb.d

#--------------------
# system setting
#--------------------
MARIADB_RESTART=always

#####################################
#
# MySQL family:
#
# MySQL
#
#####################################

MYSQL_VERSION=8.0
# available: 8.0, 5.7, 5.6, 5.5

MYSQL_DATABASE=default
MYSQL_USER=default
MYSQL_PASSWORD=secret
MYSQL_PORT=3306
MYSQL_ROOT_PASSWORD=root
# if version is 8.0 and above, use my8.cnf
# else use my.cnf
MYSQL_CONFIG_FILE=my8.cnf
MYSQL_ENTRYPOINT_INITDB=./mysql/docker-entrypoint-initdb.d

#--------------------
# system setting
#--------------------
MYSQL_RESTART=always

#####################################
#
# MySQL family:
#
# Percona
#
#####################################

PERCONA_VERSION=5.7
# available: 5.7, 5.6, 5.5

PERCONA_DATABASE=default
PERCONA_USER=default
PERCONA_PASSWORD=secret
PERCONA_PORT=3306
PERCONA_ROOT_PASSWORD=root
PERCONA_ENTRYPOINT_INITDB=./percona/docker-entrypoint-initdb.d

#--------------------
# system setting
#--------------------
PERCONA_RESTART=always

#####################################
# PostgreSQL
#####################################

POSTGRES_VERSION=12
# available version: 12, 11, 10, 9.6, 9.5, 9.4, 9.3 and/or with alpine

POSTGRES_DB=default
POSTGRES_USER=default
POSTGRES_PASSWORD=secret
POSTGRES_PORT=5432

#--------------------
# system setting
#--------------------
POSTGRES_RESTART=always


#####################################
# PostgreSQL with GIS
#####################################

POSTGIS_VERSION=11
# available version: 11, 10, 9.6, 9.5, 9.4, 9.3, 9.2, 9.1, 9.0 with alpine
# please refer the settings from https://github.com/postgis/docker-postgis

POSTGIS_PORT=5432

#--------------------
# system setting
#--------------------
POSTGIS_RESTART=always

#####################################
# Elasticsearch
#####################################

ELASTICSEARCH_VERSION="${ELK_VERSION}"
# available version: plz check official website: https://www.docker.elastic.co

ELASTICSEARCH_SMARTCN_ANALYZER=true
ELASTICSEARCH_IK_ANALYZER=true
ELASTICSEARCH_ANSJ_ANALYZER=true
ELASTICSEARCH_HOST_HTTP_PORT=9200
ELASTICSEARCH_HOST_TRANSPORT_PORT=9300
ELASTICSEARCH_HTTP_HOST=0.0.0.0
ELASTICSEARCH_TRANSPORT_HOST=127.0.0.1
ELASTICSEARCH_ENABLE_PLUGINS=true
ELASTICSEARCH_LICENSE_TYPE=basic
ELASTICSEARCH_MIN_MEMORY=512m
ELASTICSEARCH_MAX_MEMORY=512m
ELASTICSEARCH_LIMIT_MEMORY=1g

#--------------------
# system setting
#--------------------
ELASTICSEARCH_RESTART=always

#####################################
# mongodb
#####################################

MONGO_VERSION=3.6
# available versions: 3.7, 3.6, 3.4, 3.2, 3.0, plz check https://hub.docker.com/_/mongo/ for detail

MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD=asdfroot

MONGO_PORT=27017

#--------------------
# system setting
#--------------------
MONGO_RESTART=always

#####################################
# redis
#####################################

REDIS_VERSION=5
# available versions: 4.0, 3.2. plz check https://hub.docker.com/_/redis/ for detail information

REDIS_PORT=6379

#--------------------
# system setting
#--------------------
REDIS_RESTART=always

#####################################
# memcached
#####################################

MEMCACHED_VERSION=1.5
# available versions: 1.5(1.5.6) alpine. plz check https://hub.docker.com/_/memcached/ for detail information

MEMCACHED_PORT=11211

#--------------------
# system setting
#--------------------
MEMCACHED_RESTART=always

#####################################
# minio
#####################################

MINIO_VERSION=latest
# available settings: latest / edge

MINIO_PORT=9900
MINIO_CONSOLE_PORT=9901

MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=asdfminio

#--------------------
# system setting
#--------------------
MINIO_RESTART=always
MINIO_CPU_LIMIT=1
MINIO_MEMORY_LIMIT=1g

#####################################
# kibana
#####################################

KIBANA_VERSION="${ELK_VERSION}"
# available version: plz check official website: https://www.docker.elastic.co

KIBANA_ENABLE_SECURITY=false
KIBANA_ELASTICSEARCH_URLS=http://elasticsearch:9200
KIBANA_MONTOR_ENABLED=false

KIBANA_PORT=5601

#--------------------
# system setting
#--------------------
KIBANA_RESTART=always

#####################################
# logstash
#####################################

LOGSTASH_VERSION="${ELK_VERSION}"
# available versions: plz check official website: https://www.docker.elastic.co

LOGSTASH_PLUGINS=
# split by ';', set 'NONE' to ignore install plugins. $please check https://www.elastic.co/guide/en/logstash/current/input-plugins.html for plugin list.
# tested plugins: github;logstash-input-google_cloud_storage;logstash-input-google_pubsub;graphite;heartbeat;logstash-input-http_poller;kinesis;logstash-input-log4j;meetup;logstash-input-puppet_facter;relp;rss;	logstash-input-s3-sns-sqs;stomp;websocket;logstash-input-wmi;xmpp

LOGSTASH_MIN_MEMORY=256m
LOGSTASH_MAX_MEMORY=256m

# 10 ports available
LOGSTASH_PORT_RANGE=5041-5050

# 1 udp port available
LOGSTASH_UDP_PORT=10101

#--------------------
# system setting
#--------------------
LOGSTASH_RESTART=always

#####################################
# rethinkdb
#####################################

RETHINKDB_VERSION=2.3
# available versions: only 2.3 for now. plz check official website: https://hub.docker.com/_/rethinkdb/ for detail information

RETHINKDB_PORT=8080

#--------------------
# system setting
#--------------------
RETHINKDB_RESTART=always


#####################################
# rabbitmq
#####################################

RABBITMQ_VERSION=3.8
# available versions: 3.6, 3.7, plz check official website: https://hub.docker.com/_/rabbitmq/ for detail information

RABBITMQ_USER=test
RABBITMQ_PASSWORD=test
RABBITMQ_VHOST=/
RABBITMQ_COOKIE=test
RABBITMQ_EPMD_PORT=4369
RABBITMQ_NODE_HOST_PORT_SSL=5671
RABBITMQ_NODE_HOST_PORT=5672
RABBITMQ_MANAGEMENT_HTTP_HOST_PORT=15672
RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT=15671
RABBITMQ_CLUSTER_PORT=25672

#--------------------
# system setting
#--------------------
RABBITMQ_RESTART=always


#####################################
# php-worker
#####################################

# PHP_WORKER_INSTALL_GMP=true
# PHP_WORKER_INSTALL_PGSQL=true
# PHP_WORKER_INSTALL_REDIS=true
# PHP_WORKER_INSTALL_MEMCACHED=true
## current not support (use global variable)

#--------------------
# system setting
#--------------------
PHP_WORKER_RESTART=always



#####################################
# phpmyadmin
#####################################

PMA_VERSION=latest
PMA_HOST=mariadb
PMA_PORT=3306
PMA_USER=root
PMA_PASSWORD=root
PMA_EXT_PORT=8080
PMA_DB_ENGINE=mariadb
#--------------------
# system setting
#--------------------
PMA_RESTART=always


#####################################
# gitlab (CE)
#####################################

## check https://hub.docker.com/r/gitlab/gitlab-ce/tags/ for version list
GITLAB_VERSION=latest
GITLAB_CONF_DIR=config
GITLAB_HOME_DIR=home
GITLAB_HTTP_PORT=8098
GITLAB_HTTPS_PORT=8099
GITLAB_SSH_PORT=8097
#--------------------
# system setting
#--------------------
GITLAB_RESTART=always


#####################################
# Node.js
#####################################

NODEJS_VERSION=12
NODEJS_USER=kimhsiao
NODEJS_YARN_VERSION=latest
NODEJS_ENV=develop
NODEJS_MEMORY_LIMIT=512M
NODEJS_MEMORY_SWAP_LIMIT=1G
NODEJS_PORT_MAPPING_1=10080
NODEJS_PORT_MAPPING_2=10081
NODEJS_PORT_MAPPING_3=10082
NODEJS_PORT_MAPPING_4=8080
NODEJS_WORKING_DIR=../web/pt3
#--------------------
# system setting
#--------------------
NODEJS_RESTART=always

#####################################
# CrateDB
#####################################

CRATEDB_VERSION=latest
CRATEDB_HEAP_SIZE=1g
CRATEDB_HTTP_PORT=4200
CRATEDB_TRANSPORT_PORT=4300
CRATEDB_PGSQL_PROTOCOL_PORT=5433
#--------------------
# system setting
#--------------------
CRATEDB_RESTART=always

#####################################
# Gitea
#####################################

GITEA_VERSION=latest

GITEA_USER_UID=1000
GITEA_USER_GID=1000
GITEA_WEB_PORT=10080
GITEA_SSH_PORT=10022
#--------------------
# system setting
#--------------------
GITEA_RESTART=always


#####################################
# Drone server (general)
#####################################
DRONE_VERSION=1
DRONE_SERVER_RESTART=always

DRONE_LOGS_PRETTY=true
DRONE_LOGS_COLOR=true

#####################################
# Drone server (gitlab)
#####################################
DRONE_SERVER_GITLAB_PORT=8000

DRONE_SERVER_GITLAB_VOLUME=./drone/server/gitlab

DRONE_SERVER_GITLAB_HOST=
DRONE_SERVER_GITLAB_PROTO=
DRONE_RPC_GITLAB_SECRET=
DRONE_AGENTS_GITLAB_ENABLED=

DRONE_GITLAB_SERVER=
DRONE_GITLAB_CLIENT_ID=
DRONE_GITLAB_CLIENT_SECRET=
DRONE_GITLAB_ALWAYS_AUTH=

#####################################
# Drone server (gitea)
#####################################
DRONE_SERVER_GITEA_PORT=8000

DRONE_SERVER_GITEA_VOLUME=./drone/server/gitea

DRONE_SERVER_GITEA_HOST=
DRONE_SERVER_GITEA_PROTO=
DRONE_RPC_GITEA_SECRET=
DRONE_AGENTS_GITEA_ENABLED=

DRONE_GITEA_SERVER=http://gitea
DRONE_GITEA_CLIENT_ID=
DRONE_GITEA_CLIENT_SECRET=
DRONE_GITEA_ALWAYS_AUTH=

#####################################
# Drone server (bitbucket server)
#####################################
DRONE_SERVER_BITBUCKET_PORT=8000

DRONE_SERVER_BITBUCKET_VOLUME=./drone/server/bitbucket

DRONE_SERVER_BITBUCKET_HOST=
DRONE_SERVER_BITBUCKET_PROTO=
DRONE_RPC_BITBUCKET_SECRET=

DRONE_BITBUCKET_USERNAME=
DRONE_BITBUCKET_PASSWORD=
DRONE_BITBUCKET_ALWAYS_AUTH=
DRONE_BITBUCKET_CONSUMER_KEY=
DRONE_BITBUCKET_PRIVATE_KEY=
DRONE_BITBUCKET_SERVER=

#####################################
# Drone server (github server)
#####################################
DRONE_SERVER_GITHUB_PORT=8000

DRONE_SERVER_GITHUB_VOLUME=./drone/server/github

DRONE_SERVER_GITHUB_HOST=
DRONE_SERVER_GITHUB_PROTO=
DRONE_RPC_GITHUB_SECRET=

DRONE_GITHUB_CLIENT_ID=
DRONE_GITHUB_CLIENT_SECRET=

#####################################
# Drone agent
#####################################
DRONE_AGENT_RETART=always

DRONE_RPC_AGENT_SERVER=
DRONE_RPC_AGENT_SECRET=
DRONE_RUNNER_CAPACITY=3

#####################################
# Mosquitto
#####################################
MOSQUITTO_VERSION=latest
# available including 1.5, 1.6, may check official github site (https://github.com/eclipse/mosquitto)

# export port for external access
MOSQUITTO_UNENCRYPTED_PORT=1883
MOSQUITTO_ENCRYPTED_PORT=8883
MOSQUITTO_ENCRYPTED_CLIENT_CERT_PORT=8884
MOSQUITTO_UNENCRYPTED_WEBSOCKET_PORT=8080
MOSQUITTO_ENCRYPTED_WEBSOCKET_PORT=8081

MOSQUITTO_RESTART=always

#####################################
# Mailhog setting
#####################################
MAILHOG_VERSION=latest
# available including v1.0.0, latest, may check official github site (https://github.com/mailhog/MailHog)

MAILHOG_SMTP_PORT=1025
MAILHOG_WEB_PORT=8025

MAILHOG_RESTART=always

#####################################
# Grafana setting
#####################################
GRAFANA_VERSION=latest
# available version can check official docker-hub (https://hub.docker.com/r/grafana/grafana/)

GRAFANA_PLUGINS_INSTALL=true
# only set true if you want to install plugin (set true first time only)

GRAFANA_PLUGINS=grafana-image-renderer
# please refer the url: https://grafana.com/docs/grafana/latest/installation/docker/#custom-image-with-grafana-image-renderer-plugin-pre-installed to install, give the plugin names and/or urls, split by ;

## the following setting is only required for image renderer plugin
GRAFANA_RENDERING_SERVER_URL=http://grafana-render:8081/render
# the port number should match the export port number of grafana-rander server
GRAFANA_RENDERING_CALLBACK_URL=http://grafana:3001
# the port number should match the export port number of its external port
GRAFANA_LOG_FILTER=rendering:debug

GRAFANA_EXTERNAL_PORT=3001
GRAFANA_RESTART=always

#####################################
# Grafana image render setting
#####################################
# all the settings should check the official document: https://github.com/grafana/grafana-image-renderer/blob/master/docs/remote_rendering_using_docker.md
GRAFANA_RENDER_METRICS=true
GRAFANA_RENDER_IGNORE_HTTPS_ERRORS=true
GRAFANA_RENDER_LOG_LEVEL=debug
GRAFANA_RENDER_VERBOSE_LOGGING=true
GRAFANA_RENDER_DUMPIO=true
GRAFANA_RENDER_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-accelerated-2d-canvas,--disable-gpu,--window-size=1280x758
GRAFANA_RENDER_MODE=default

GRAFANA_RENDER_RESTART=always

#####################################
# Zookeeper setting
#####################################

ZOOKEEPER_VERSION=latest

# ZooKeeper's tickTime. The length of a single tick, which is the basic time unit used by ZooKeeper, as measured in milliseconds. It is used to regulate heartbeats, and timeouts. For example, the minimum session timeout will be two ticks
ZOO_TICK_TIME=2000

# ZooKeeper's initLimit. Amount of time, in ticks (see tickTime), to allow followers to connect and sync to a leader. Increased this value as needed, if the amount of data managed by ZooKeeper is large.
ZOO_INIT_LIMIT=5

# ZooKeeper's syncLimit. Amount of time, in ticks (see tickTime), to allow followers to sync with ZooKeeper. If followers fall too far behind a leader, they will be dropped.
ZOO_MAX_CLIENT_CNXNS=2

# Zookeeper's standaloneEnabled. Prior to 3.5.0, one could run ZooKeeper in Standalone mode or in a Distributed mode. These are separate implementation stacks, and switching between them during run time is not possible. By default (for backward compatibility) standaloneEnabled is set to true. The consequence of using this default is that if started with a single server the ensemble will not be allowed to grow, and if started with more than one server it will not be allowed to shrink to contain fewer than two participants.
ZOO_STANDALONE_ENABLED=true

# Zookeeper's standaloneEnabled. Prior to 3.5.0, one could run ZooKeeper in Standalone mode or in a Distributed mode. These are separate implementation stacks, and switching between them during run time is not possible. By default (for backward compatibility) standaloneEnabled is set to true. The consequence of using this default is that if started with a single server the ensemble will not be allowed to grow, and if started with more than one server it will not be allowed to shrink to contain fewer than two participants.
ZOO_ADMINSERVER_ENABLED=true

# Zookeeper's admin.enableServer. New in 3.5.0: The AdminServer is an embedded Jetty server that provides an HTTP interface to the four letter word commands. By default, the server is started on port 8080, and commands are issued by going to the URL "/commands/[command name]", e.g., http://localhost:8080/commands/stat.
ZOO_AUTOPURGE_PURGEINTERVAL=0

# Zookeeper's autoPurge.purgeInterval. The time interval in hours for which the purge task has to be triggered. Set to a positive integer (1 and above) to enable the auto purging. Defaults to 0.
ZOO_AUTOPURGE_SNAPRETAINCOUNT=0

# Zookeeper's 4lw.commands.whitelist. A list of comma separated Four Letter Words commands that user wants to use. A valid Four Letter Words command must be put in this list else ZooKeeper server will not enable the command. By default the whitelist only contains "srvr" command which zkServer.sh uses. The rest of four letter word commands are disabled by default.
ZOO_4LW_COMMANDS_WHITELIST=srvr

##################
# Adv config
##################

# Not every Zookeeper configuration setting is exposed via the environment variables listed above. These variables are only meant to cover minimum configuration keywords and some often changing options. If mounting your custom config file as a volume doesn't work for you, consider using ZOO_CFG_EXTRA environment variable. You can add arbitrary configuration parameters to Zookeeper configuration file using this variable. The following example shows how to enable Prometheus metrics exporter on port 7070:
#
# $ docker run --name some-zookeeper --restart always -e ZOO_CFG_EXTRA="metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metri
# ZOO_CFG_EXTRA=

# Many of the Zookeeper advanced configuration options can be set there using Java system properties in the form of -Dproperty=value. For example, you can use Netty instead of NIO (default option) as a server communication framework:
#
# $ docker run --name some-zookeeper --restart always -e JVMFLAGS="-Dzookeeper.serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory" zookeeper
# See Advanced Configuration for the full list of supported Java system properties.
#
# Another example use case for the JVMFLAGS is setting a maximum JWM heap size of 1 GB:
#
# $ docker run --name some-zookeeper --restart always -e JVMFLAGS="-Xmx1024m" zookeeper
# ZOO_JVMFLAGS=

##################
# Replicated mode (https://hub.docker.com/_/zookeeper)
##################

# The id must be unique within the ensemble and should have a value between 1 and 255. Do note that this variable will not have any effect if you start the container with a /data directory that already contains the myid file.
# ZOO_MY_ID=

# This variable allows you to specify a list of machines of the Zookeeper ensemble. Each entry has the form of server.id=host:port:port. Entries are separated with space. Do note that this variable will not have any effect if you start the container with a /conf directory that already contains the zoo.cfg file.
#
# In 3.5, the syntax of this has changed. Servers should be specified as such: server.id=<address1>:<port1>:<port2>[:role];[<client port address>:]<client port> Zookeeper Dynamic Reconfiguration
# ZOO_SERVERS

ZOOKEEP_RESTART=always

#####################################
# Kafka setting
#####################################

# check https://github.com/wurstmeister/kafka-docker for available versions
KAFKA_DOCERK_VERSION=latest

# check https://github.com/wurstmeister/kafka-docker/blob/master/README.md for Advertised settings
KAFKA_ADVERTISED_HOST_NAME=10.89.20.109

KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181

KAFKA_PORT=9092

KAFKA_RESTART=always

#####################################
# Wekan setting
#####################################

# check https://hub.docker.com/r/wekanteam/wekan/tags for available versions
WEKAN_DOCKER_VERSION=latest

WEKAN_ROOT_URL=http://localhost
WEKAN_MONGO_URL=mongodb://mongo

WEKAN_PORT=8080

WEKAN_RESTART=always

#####################################
# NETWORK setting
#####################################

HTTP_PORT=80
HTTPS_PORT=443
HTTP_OTHER_PORT=2018

#####################################
# Misc setting
#####################################

# Unified ELK version
ELK_VERSION=6.2.2

# numbers of cpu (core)
NPROC=4

# timezone setting
TIMEZONE=UTC

# global log saving path
LOG_DATA_SAVE_PATH=./logs

# global data saving path
DATA_SAVE_PATH=./storage

# If the location is China
CHANGE_SOURCE=false

# Replace with your docker host ip (will be appended to /etc/hosts)
DOCKER_HOST_IP=10.0.75.3

# The remote interpreter entry machine name `kimer`
PHP_IDE_CONFIG=serverName=kimer

# Fix for windows user to make sure the application path works
COMPOSE_CONVERT_WINDOWS_PATHS=1
